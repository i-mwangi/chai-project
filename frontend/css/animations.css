/**
 * Micro-interactions and Animations
 * Professional animations and transitions for enhanced UX
 * 
 * This file implements:
 * - Hover animations for interactive elements (Subtask 8.1)
 * - Loading state animations (Subtask 8.2)
 * - Modal and view transition animations (Subtask 8.3)
 * - Success and feedback animations (Subtask 8.4)
 * 
 * Requirements: 7.1, 7.2, 7.3, 7.4, 7.5, 10.1, 10.4
 */

/* ============================================
   SUBTASK 8.1: HOVER ANIMATIONS FOR INTERACTIVE ELEMENTS
   Requirements: 7.1
   ============================================ */

/* Smooth transitions (200-300ms) with cubic-bezier easing */

/* Interactive element base hover */
.interactive,
.hoverable {
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}

.interactive:hover,
.hoverable:hover {
  transform: translateY(-2px);
}

/* Link hover animations */
a:not(.btn):not(.nav-link) {
  position: relative;
  transition: color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

a:not(.btn):not(.nav-link)::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: var(--brand-primary);
  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

a:not(.btn):not(.nav-link):hover::after {
  width: 100%;
}

/* Card hover animations - Enhanced */
.card-interactive {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
}

.card-interactive:hover {
  transform: translateY(-6px) scale(1.01);
}

/* Button hover animations - Enhanced ripple */
.btn-animated {
  position: relative;
  overflow: hidden;
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-animated::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.btn-animated:active::before {
  width: 300px;
  height: 300px;
  transition: width 0s, height 0s;
}

/* Icon hover animations */
.icon-hover {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
              color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.icon-hover:hover {
  transform: scale(1.15) rotate(5deg);
  color: var(--brand-primary);
}

/* Icon bounce on hover */
.icon-bounce:hover {
  animation: icon-bounce 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes icon-bounce {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.2); }
}

/* Icon spin on hover */
.icon-spin-hover:hover {
  animation: icon-spin 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes icon-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Table row hover */
tr.hoverable,
.table-row-hover {
  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1),
              transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

tr.hoverable:hover,
.table-row-hover:hover {
  background-color: var(--bg-tertiary);
  transform: translateX(4px);
}

/* Badge hover animations */
.badge-hover {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.badge-hover:hover {
  transform: scale(1.05);
  box-shadow: var(--shadow-sm);
}

/* Input focus animations */
.input-animated {
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}

.input-animated:focus {
  transform: scale(1.01);
}

/* Stat card value pulse on hover */
.stat-value-animated {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.stat-value-animated:hover {
  transform: scale(1.05);
  color: var(--brand-primary);
}

/* ============================================
   SUBTASK 8.2: LOADING STATE ANIMATIONS
   Requirements: 7.2, 10.1, 10.4
   ============================================ */

/* Spinner animations for actions */
.spinner {
  display: inline-block;
  width: 20px;
  height: 20px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: var(--brand-primary);
  animation: spinner-rotate 0.6s linear infinite;
}

@keyframes spinner-rotate {
  to { transform: rotate(360deg); }
}

.spinner-sm {
  width: 16px;
  height: 16px;
  border-width: 2px;
}

.spinner-lg {
  width: 32px;
  height: 32px;
  border-width: 4px;
}

.spinner-white {
  border-color: rgba(255, 255, 255, 0.3);
  border-top-color: white;
}

.spinner-brand {
  border-color: rgba(76, 175, 80, 0.3);
  border-top-color: var(--brand-primary);
}

/* Dots spinner */
.spinner-dots {
  display: inline-flex;
  gap: 6px;
  align-items: center;
}

.spinner-dots span {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--brand-primary);
  animation: spinner-dots-bounce 1.4s infinite ease-in-out both;
}

.spinner-dots span:nth-child(1) {
  animation-delay: -0.32s;
}

.spinner-dots span:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes spinner-dots-bounce {
  0%, 80%, 100% {
    transform: scale(0);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Skeleton loaders for content */
.skeleton {
  background: var(--bg-tertiary);
  border-radius: var(--radius-sm);
  position: relative;
  overflow: hidden;
}

.skeleton::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.05) 50%,
    transparent 100%
  );
  animation: skeleton-shimmer 2s infinite;
}

@keyframes skeleton-shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Skeleton variants */
.skeleton-text {
  height: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.skeleton-text-sm {
  height: 12px;
}

.skeleton-text-lg {
  height: 20px;
}

.skeleton-title {
  height: 24px;
  width: 60%;
  margin-bottom: 12px;
}

.skeleton-avatar {
  width: 48px;
  height: 48px;
  border-radius: var(--radius-full);
}

.skeleton-card {
  height: 200px;
  border-radius: var(--radius-md);
}

.skeleton-button {
  height: 40px;
  width: 120px;
  border-radius: var(--radius-sm);
}

/* Progress indicators */
.progress-bar {
  width: 100%;
  height: 8px;
  background: var(--bg-tertiary);
  border-radius: var(--radius-full);
  overflow: hidden;
  position: relative;
}

.progress-bar-fill {
  height: 100%;
  background: var(--gradient-brand);
  border-radius: var(--radius-full);
  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.progress-bar-animated .progress-bar-fill {
  position: relative;
  overflow: hidden;
}

.progress-bar-animated .progress-bar-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  animation: progress-shimmer 2s infinite;
}

@keyframes progress-shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Indeterminate progress bar */
.progress-bar-indeterminate {
  position: relative;
  overflow: hidden;
}

.progress-bar-indeterminate::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 30%;
  background: var(--gradient-brand);
  border-radius: var(--radius-full);
  animation: progress-indeterminate 1.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
}

@keyframes progress-indeterminate {
  0% {
    left: -30%;
  }
  100% {
    left: 100%;
  }
}

/* Pulse loading animation */
.pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Loading overlay */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: var(--z-modal);
  animation: fade-in 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* ============================================
   SUBTASK 8.3: MODAL AND VIEW TRANSITION ANIMATIONS
   Requirements: 7.4, 7.5
   ============================================ */

/* Slide-up animation for modals */
.modal-enter {
  animation: modal-slide-up 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes modal-slide-up {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modal-exit {
  animation: modal-slide-down 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes modal-slide-down {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(30px);
  }
}

/* Backdrop fade animation */
.backdrop-enter {
  animation: backdrop-fade-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes backdrop-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.backdrop-exit {
  animation: backdrop-fade-out 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes backdrop-fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* View switching fade transitions */
.view-enter {
  animation: view-fade-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes view-fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.view-exit {
  animation: view-fade-out 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes view-fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Slide transitions for views */
.view-slide-left-enter {
  animation: view-slide-left-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes view-slide-left-in {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.view-slide-right-enter {
  animation: view-slide-right-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes view-slide-right-in {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Scale animation for modals */
.modal-scale-enter {
  animation: modal-scale-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes modal-scale-in {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.modal-scale-exit {
  animation: modal-scale-out 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes modal-scale-out {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

/* Drawer slide animations */
.drawer-left-enter {
  animation: drawer-slide-left-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes drawer-slide-left-in {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

.drawer-right-enter {
  animation: drawer-slide-right-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes drawer-slide-right-in {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

/* ============================================
   SUBTASK 8.4: SUCCESS AND FEEDBACK ANIMATIONS
   Requirements: 7.3
   ============================================ */

/* Checkmark animations */
.checkmark {
  width: 56px;
  height: 56px;
  border-radius: 50%;
  display: block;
  stroke-width: 3;
  stroke: var(--success);
  stroke-miterlimit: 10;
  box-shadow: inset 0 0 0 var(--success);
  animation: checkmark-fill 0.4s ease-in-out 0.4s forwards,
             checkmark-scale 0.3s ease-in-out 0.9s both;
}

.checkmark-circle {
  stroke-dasharray: 166;
  stroke-dashoffset: 166;
  stroke-width: 3;
  stroke-miterlimit: 10;
  stroke: var(--success);
  fill: none;
  animation: checkmark-stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}

.checkmark-check {
  transform-origin: 50% 50%;
  stroke-dasharray: 48;
  stroke-dashoffset: 48;
  animation: checkmark-stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}

@keyframes checkmark-stroke {
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes checkmark-scale {
  0%, 100% {
    transform: none;
  }
  50% {
    transform: scale3d(1.1, 1.1, 1);
  }
}

@keyframes checkmark-fill {
  100% {
    box-shadow: inset 0 0 0 30px var(--success);
  }
}

/* Success animation */
.success-animation {
  animation: success-bounce 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes success-bounce {
  0% {
    opacity: 0;
    transform: scale(0);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Toast notification slide-in */
.toast-enter {
  animation: toast-slide-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes toast-slide-in {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.toast-exit {
  animation: toast-slide-out 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes toast-slide-out {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

/* Toast from top */
.toast-top-enter {
  animation: toast-top-slide-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes toast-top-slide-in {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Button ripple effects */
.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s, opacity 0.6s;
  opacity: 0;
}

.ripple:active::after {
  width: 300px;
  height: 300px;
  opacity: 1;
  transition: width 0s, height 0s, opacity 0s;
}

/* Shake animation for errors */
.shake {
  animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

@keyframes shake {
  10%, 90% {
    transform: translateX(-2px);
  }
  20%, 80% {
    transform: translateX(4px);
  }
  30%, 50%, 70% {
    transform: translateX(-6px);
  }
  40%, 60% {
    transform: translateX(6px);
  }
}

/* Bounce animation */
.bounce {
  animation: bounce 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

/* Tada animation for emphasis */
.tada {
  animation: tada 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes tada {
  0% {
    transform: scale(1) rotate(0deg);
  }
  10%, 20% {
    transform: scale(0.9) rotate(-3deg);
  }
  30%, 50%, 70%, 90% {
    transform: scale(1.1) rotate(3deg);
  }
  40%, 60%, 80% {
    transform: scale(1.1) rotate(-3deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

/* Heartbeat animation */
.heartbeat {
  animation: heartbeat 1.5s ease-in-out infinite;
}

@keyframes heartbeat {
  0%, 100% {
    transform: scale(1);
  }
  10%, 30% {
    transform: scale(1.1);
  }
  20%, 40% {
    transform: scale(1);
  }
}

/* ============================================
   UTILITY ANIMATION CLASSES
   ============================================ */

/* Fade animations */
.fade-in {
  animation: fade-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-out {
  animation: fade-out 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Slide animations */
.slide-up {
  animation: slide-up 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slide-up {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.slide-down {
  animation: slide-down 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slide-down {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Scale animations */
.scale-in {
  animation: scale-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes scale-in {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

.scale-out {
  animation: scale-out 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes scale-out {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.9);
    opacity: 0;
  }
}

/* Rotate animations */
.rotate-in {
  animation: rotate-in 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes rotate-in {
  from {
    transform: rotate(-180deg);
    opacity: 0;
  }
  to {
    transform: rotate(0);
    opacity: 1;
  }
}

/* Flip animation */
.flip {
  animation: flip 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes flip {
  0% {
    transform: perspective(400px) rotateY(0);
  }
  100% {
    transform: perspective(400px) rotateY(360deg);
  }
}

/* Swing animation */
.swing {
  animation: swing 1s cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: top center;
}

@keyframes swing {
  20% {
    transform: rotate(15deg);
  }
  40% {
    transform: rotate(-10deg);
  }
  60% {
    transform: rotate(5deg);
  }
  80% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* Wobble animation */
.wobble {
  animation: wobble 1s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes wobble {
  0%, 100% {
    transform: translateX(0);
  }
  15% {
    transform: translateX(-25px) rotate(-5deg);
  }
  30% {
    transform: translateX(20px) rotate(3deg);
  }
  45% {
    transform: translateX(-15px) rotate(-3deg);
  }
  60% {
    transform: translateX(10px) rotate(2deg);
  }
  75% {
    transform: translateX(-5px) rotate(-1deg);
  }
}

/* ============================================
   ANIMATION DELAYS
   ============================================ */

.delay-100 { animation-delay: 0.1s; }
.delay-200 { animation-delay: 0.2s; }
.delay-300 { animation-delay: 0.3s; }
.delay-400 { animation-delay: 0.4s; }
.delay-500 { animation-delay: 0.5s; }

/* ============================================
   ANIMATION DURATIONS
   ============================================ */

.duration-fast { animation-duration: 0.2s; }
.duration-normal { animation-duration: 0.3s; }
.duration-slow { animation-duration: 0.5s; }

/* ============================================
   ACCESSIBILITY - REDUCED MOTION
   ============================================ */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .skeleton::after,
  .progress-bar-animated .progress-bar-fill::after,
  .progress-bar-indeterminate::after {
    animation: none;
  }
}
